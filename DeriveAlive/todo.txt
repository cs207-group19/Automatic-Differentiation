TODO:

1. Newton root finding for vectors
2. Regression tests (minimize Rosenbrock function) for Newton root finding for scalars (Chen)
3. Regression tests for Newton root finding for vectors (Chen)
4. Gradient descent for scalars and vectors
5. Regression tests for gradient descent for scalars and vectors
6. (Conjugate gradients + regression tests)
7. Splines (Yue)


Things that David said during meeting on 11/29 (ignore typos):

module for nonlinear equation solver
module for root finders

optimization suite has a few submodules (nonlienar equation solvers and optimizatino algorithms

a few root finding methods, a few optimization methods

demo on a few types of equations


show pretty pictures but dciwnticially don't mean anything
contour plots. Show that found root. Show convergence. 
i.e. show that newton method achieves quadratic iconvergence. show number fo iteratinos it takes to converge. 
kind of results want to show to demo everthign works correctly. 
make sure it takes more than an afternoon to impelment these.m

consider: could have situation where you ask user to define own algorithm

implement time integrator to solve pendulum problem
only need derivatives if do implicit time-integrator.

Conjugate gradients


Demo on a few nice problems. Show that you get right answer, right convergence.

Have a test suite for unit tests. 
offer a regression test suite. 
i.e. solve minimum of Rosenbrock function . any time anyone runs your tests suite, it also runs through the minimization of rosenbrock tests. 

allow user to define own special function that easily interfaces with code, or do speical time-integrator. 

